name: PR Automation from Commit Message

on:
  push:
    branches:
      - feature/*

jobs:
  check-commit:
    runs-on: ubuntu-latest
    outputs:
      should_create_pr: ${{ steps.check.outputs.should_create_pr }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Nodig om git log te gebruiken

      - name: Check Commit Message Format
        id: check
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%s)
          echo "DEBUG: Checking commit message: '$COMMIT_MSG'"
          if echo "$COMMIT_MSG" | grep -qE "^create-pr\(title=.+;description=.+\)$"; then
            echo "Commit message matches PR creation format."
            echo "::set-output name=should_create_pr::true"
          else
            echo "Commit message does not match PR creation format—skipping."
            echo "::set-output name=should_create_pr::false"
          fi

  pr-automation:
    needs: check-commit
    if: needs.check-commit.outputs.should_create_pr == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Installeer Poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      # Valideer commit en maak PR
      - name: Validate Commit and Create PR
        run: |
          poetry install --no-root
          COMMIT_DATA=$(poetry run tools/validate_commit_msg.py && echo "VALID" || echo "INVALID")
          echo "Validation result: $COMMIT_DATA"
          if [ "$COMMIT_DATA" = "VALID" ]; then
            TITLE=$(git log -1 --pretty=%s | sed -n 's/create-pr(title=\(.*\);description=.*)/\1/p')
            DESCRIPTION=$(git log -1 --pretty=%s | sed -n 's/create-pr(title=.*;description=\(.*\))/\1/p')
            echo "Creating PR with title: $TITLE"
            gh pr create --base main --head ${{ github.ref_name }} --title "$TITLE" --body "$DESCRIPTION" --label "auto-generated"
          else
            echo "Invalid commit message—aborting PR creation."
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}