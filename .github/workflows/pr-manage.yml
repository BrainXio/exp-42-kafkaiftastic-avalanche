name: Manage Pull Request

on:
  push:
    branches:
      - feature/*

permissions:
  contents: write
  pull-requests: write

jobs:
  manage-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}

      - name: Check for pull_request.json
        id: check-file
        run: |
          if [ -f "pull_request.json" ]; then
            echo "file_exists=true" >> $GITHUB_OUTPUT
          else
            echo "file_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Get Open PRs
        id: get-pr
        run: |
          PR_NUMBER=$(gh pr list --head ${{ github.ref_name }} --state open --json number -q '.[] | .number')
          if [ -n "$PR_NUMBER" ]; then
            echo "pr_exists=true" >> $GITHUB_OUTPUT
            echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          else
            echo "pr_exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Ensure PR Change
        if: steps.check-file.outputs.file_exists == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          echo "$(date +%s)" > pr-timestamp.txt
          git add pr-timestamp.txt
          git commit -m "Update PR timestamp to trigger diff"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Parse pull_request.json
        id: parse
        if: steps.check-file.outputs.file_exists == 'true'
        run: |
          if ! jq -e .title "pull_request.json" >/dev/null 2>&1; then
            echo "Error: pull_request.json is invalid or missing title."
            exit 1
          fi
          echo "base=$(jq -r '.base // "main"' pull_request.json)" >> $GITHUB_OUTPUT
          echo "title=[AUTO] $(jq -r '.title' pull_request.json)" >> $GITHUB_OUTPUT
          echo "body=$(jq -r '.body // "Automated PR created by pull_request.json"' pull_request.json)" >> $GITHUB_OUTPUT
          echo "labels=$(jq -r '(.labels // ["auto-generated"]) | join(",")' pull_request.json)" >> $GITHUB_OUTPUT
          echo "draft=$(jq -r '.draft // false' pull_request.json)" >> $GITHUB_OUTPUT
          echo "milestone=$(jq -r '.milestone // ""' pull_request.json)" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: steps.check-file.outputs.file_exists == 'true' && steps.get-pr.outputs.pr_exists == 'false'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.PAT }}
          base: ${{ steps.parse.outputs.base }}
          branch: ${{ github.ref_name }}
          title: ${{ steps.parse.outputs.title }}
          body: ${{ steps.parse.outputs.body }}
          labels: ${{ steps.parse.outputs.labels }}
          draft: ${{ steps.parse.outputs.draft }}
          milestone: ${{ steps.parse.outputs.milestone }}

      - name: Close Pull Request
        if: steps.check-file.outputs.file_exists == 'false' && steps.get-pr.outputs.pr_exists == 'true'
        run: |
          gh pr close ${{ steps.get-pr.outputs.pr_number }} --comment "Closed because pull_request.json was removed"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}