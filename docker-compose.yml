services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint:
    - sh
    - -c
    - sleep 10 && python src/consumer.py
    environment:
    - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    - KAFKA_TOPIC=avalanche-topic
    image: ghcr.io/brainxio/exp-42-kafkaiftastic-avalanche:consumer
  app-producer:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint:
    - sh
    - -c
    - sleep 10 && python src/producer.py
    environment:
    - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    - KAFKA_TOPIC=avalanche-topic
    image: ghcr.io/brainxio/exp-42-kafkaiftastic-avalanche:producer
  kafka:
    depends_on:
    - zookeeper
    environment:
    - KAFKA_BROKER_ID=1
    - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
    - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    healthcheck:
      interval: 5s
      retries: 10
      test:
      - CMD
      - kafka-topics.sh
      - --list
      - --bootstrap-server
      - localhost:9092
      timeout: 10s
    image: bitnami/kafka:latest
    ports:
    - 9092:9092
    volumes:
    - kafka_data:/bitnami/kafka
  zookeeper:
    environment:
    - ALLOW_ANONYMOUS_LOGIN=yes
    image: bitnami/zookeeper:latest
    ports:
    - 2181:2181
    volumes:
    - zookeeper_data:/bitnami/zookeeper
volumes:
  kafka_data: null
  zookeeper_data: null
